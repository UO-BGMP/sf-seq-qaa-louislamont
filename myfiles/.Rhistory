dev.off()
dummb <- c(1,2,"joe",c(7,8))
rm(dummb)
knitr::opts_chunk$set(echo = TRUE)
g1<-list(c("GO:12","GO:72"), "Id34", "ATGACATAGTACCATA")
g1<-list(c("GO:12","GO:72"), "Id34", "ATGACATAGTACCATA", list(2,7))
g1
g1[[2]]
g1[2]
g1[[4]][1]
g1[[4]][[1]]
g1<-list(go_nums<-c("GO:12","GO:72"),
id<-"Id34",
seq <- "ATGACATAGTACCATA",
sizes <- list(2,7))
print(g1$go_nums)
g1<-list(go_nums=c("GO:12","GO:72"),
id="Id34",
seq = "ATGACATAGTACCATA",
sizes = list(2,7))
print(g1$go_nums)
g1$family<- "P450"
g1$family
samp<-rnorm(100,mean=10,sd=2)
attr(samp, "DistType") <- "Normal"
print(attr(samp, "DistType"))
attr(g1, "class")<- "Gene"
str(g1)
rm go_nums
rm(go_nums)
rm(id)
rm(samp)
rm(seq)
rm(sizes)
g1 <- Gene("Id34", "ATCAGAGTTGAAGCC", c("GO:12", "GO:72"))
Gene <- function(i, s, g){
newg<- list(id = i, seq = s, go_nums = g)
class(newg) <- "Gene"
return(newg)
}
g1 <- Gene("Id34", "ATCAGAGTTGAAGCC", c("GO:12", "GO:72"))
len_bp<-function(somegene){
return(nchar(somegene$seq))
}
print(len_bp(g1))
Protein <- function(i, s){
newp<-list(id = i, seq = s)
class(newp)<-"Protein"
return(newp)
}
p1 <- Protein("IdAQ", "ACRLFMIPQFAAG")
View(Protein)
len_bp.gene<-function(somegene){
return(nchar(somegene$seq))
}
len_bp.protein<-function(someprot){
return(3 * nchar(someprot$seq))
}
len_bp.gene(p1)
len_bp.protein(p1)
len_bp<-function(someseq){
if(class(someseq) == "Gene"){
return(nchar(someseq$seq))
}
if(class(someseq) == "Protein"){
return(3 * nchar(someseq$seq))
}
}
print(len_bp(g1))
print(len_bp(p1))
len_bp < - function(x){
UseMethod("len_bp", x)
# calls len_bp.<class>
}
print(len_bp(g1))
len_bp < - function(x){
UseMethod("len_bp", x)
# calls len_bp.<class>
}
len_bp <- function(x){
UseMethod("len_bp", x)
# calls len_bp.<class>
}
print(len_bp(g1))
len_bp.Gene<-function(somegene){
return(nchar(somegene$seq))
}
len_bp.Protein<-function(someprot){
return(3 * nchar(someprot$seq))
}
len_bp <- function(x){
UseMethod("len_bp", x)
# calls len_bp.<class>
}
print(len_bp(g1))
print(len_bp(p1))
methods(len_bp)
methods(class = "Gene")
results<-lm(samp)
samp<- rnorm(100, 10, 2)
results<-lm(samp)
methods(class = "lm")
results<-lm(samp~samp)
ysamp <- rnorm(120, 8, 1.8)
results<-lm(ysamp~samp)
samp<- rnorm(100, 10, 2)
ysamp <- rnorm(100, 8, 1.8)
results<-lm(ysamp~samp)
str(results)
plot(results)
plot(results)
plot(samp, ysamp)
ysamp <- rnorm(100, 10, 2)
results<-lm(ysamp~samp)
plot(samp, ysamp)
GeneFamily <- function(gene, seq){
newg <- list(id = gene, seq = seq)
class(newg)<- "GeneFamily"
return(newg)
}
P450<-GeneFamily(g1$id, g1$seq)
g2<-Gene("Id922","ATACGCAGTAGGAGA", c("GO:1","GO:92"))
P450.append<-g2
append(P450, g2)
source("https://bioconductor.org/biocLite.R")
biocLite("edgeR")
samp<-rnorm(100,mean=10,sd=2)
attr(samp, "DistType") <- "Normal"
print(attr(samp, "DistType"))
attr(g1, "class")<- "Gene"
str(g1)
Gene <- function(i, s, g){
newg<- list(id = i, seq = s, go_nums = g)
class(newg) <- "Gene"
return(newg)
}
g1 <- Gene("Id34", "ATCAGAGTTGAAGCC", c("GO:12", "GO:72"))
len_bp.Gene<-function(somegene){
return(nchar(somegene$seq))
}
len_bp.Protein<-function(someprot){
return(3 * nchar(someprot$seq))
}
len_bp<-function(someseq){
if(class(someseq) == "Gene"){
return(nchar(someseq$seq))
}
if(class(someseq) == "Protein"){
return(3 * nchar(someseq$seq))
}
}
len_bp <- function(x){
UseMethod("len_bp", x)
# calls len_bp.<class> -> method dispatch
}
print(len_bp(g1))
print(len_bp(p1))
Protein <- function(i, s){
newp<-list(id = i, seq = s)
class(newp)<-"Protein"
return(newp)
}
p1 <- Protein("IdAQ", "ACRLFMIPQFAAG")
len_bp.gene(p1)
len_bp.protein(p1)
print(len_bp(g1))
print(len_bp(p1))
methods(len_bp)
methods(class = "Gene")
samp<- rnorm(100, 10, 2)
ysamp <- rnorm(100, 10, 2)
results<-lm(ysamp~samp)
plot(samp, ysamp)
str(results)
GeneFamily <- function(gene, seq){
newg <- list(id = gene, seq = seq)
class(newg)<- "GeneFamily"
return(newg)
}
P450<-GeneFamily(g1$id, g1$seq)
g2<-Gene("Id922","ATACGCAGTAGGAGA", c("GO:1","GO:92"))
euristic
source("https://bioconductor.org/biocLite.R")
biocLite("gage")
biocLite("gageData")
source("https://bioconductor.org/biocLite.R")
biocLite("gageData")
source("https://bioconductor.org/biocLite.R")
biocLite("pathview")
source("https://bioconductor.org/biocLite.R")
biocLite("KEGGgraph")
source("http://bioconductor.org/biocLite.R")
biocLite("KEGGgraph")
source("https://bioconductor.org/biocLite.R")
biocLite()
install.packages("XML")
source("https://bioconductor.org/biocLite.R")
version
source("https://bioconductor.org/biocLite.R")
biocLite("KEGGgraph")
install.packages("pathview",repos="http://R-Forge.R-project.org")
install.packages("gageData",repos="http://R-Forge.R-project.org")
install.packages("KEGGgraph",repos="http://R-Forge.R-project.org")
version
source("https://bioconductor.org/biocLite.R")
update.packages(checkBuilt = T)
source("https://bioconductor.org/biocLite.R")
biocLite("gage")
update.packages(checkBuilt = T)
update.packages(checkBuilt = T)
biocLite("gageData")
source("https://bioconductor.org/biocLite.R")
remove.packages("biocInstaller")
remove.packages("biocLite")
remove.packages("biocInstaller")
remove.packages("BiocInstaller")
remove.packages("BiocInstaller")
source("https://bioconductor.org/biocLite.R")
biocValid()
biocLite()
biocLite("gageData")
knitr::opts_chunk$set(echo = TRUE)
library("gage")
library("gage")
library("gageData")
biocValid()
?biocValid
biocLite("pathview")
library("pathview")
version
packageStatus()
packageStatus()
?rbinom
knitr::opts_chunk$set(echo = TRUE)
rbinom(100, 20, 0.5)
hist(rbinom(100, 20, 0.5))
hist(rbinom(100, 20, 0.5))
hist(rbinom(100, 20, 0.5))
hist(rbinom(100, 20, 0.5))
hist(rbinom(100, 20, 0.5))
hist(rbinom(100, 20, 0.5))
hist(rbinom(100, 20, 0.5))
hist(rbinom(100, 20, 0.5))
hist(rbinom(100, 20, 0.5))
hist(rbinom(100, 20, 0.5))
hist(rbinom(100, 20, 0.5))
hist(rbinom(100, 20, 0.5))
hist(rbinom(100, 20, 0.5))
hist(rbinom(100, 20, 0.5))
hist(rbinom(100, 20, 0.5))
hist(rbinom(100, 20, 0.5))
hist(rbinom(100, 20, 0.5))
hist(rbinom(100, 20, 0.5))
hist(rbinom(100, 20, 0.5))
hist(rbinom(100, 20, 0.5))
rbinom(100, 20, 0.5)
rbinom(100, 20, 0.5)
rbinom(100, 20, 0.5)
rbinom(100, 20, 0.5)
rbinom(100, 20, 0.5)
x <- rnorm (10000, mean=50.5, sd=5.5)
x_sample_means <- NULL
for(i in 1:1000){
x_samp<- sample(x, 20, replace=FALSE)
x_sample_means[i] <- mean(x_samp)
}
plot(x_sample_means)
plot(x)
hist(x)
hist(x_sample_means)
hist(x)
hist(x_sample_means)
x.lognorm<-log(x)
hist(x.lognorm)
logsampmean<-NULL
for(i in 1:1000){
logsamp<-sample(x.lognorm, 20, replace=F)
logsampmean[i]<-mean(logsamp)
}
hist(logsampmean)
library(tidyverse)
tibble(mpg)
tibble(dataset=mpg)
filter(flights, month==11 | month == 12)
filter(flights_sml, month==11 | month == 12)
library(flights)
filter(nycflights13, month==11 | month == 12)
library(nycflights13)
setwd("bgmp/2017_Bi624/sf-seq-qaa-louislamont/myfiles/")
setwd("bgmp/2017_Bi624/sf-seq-qaa-louislamont/myfiles/")
knitr::opts_chunk$set(echo = TRUE, eval=F)
2br1<-read.table("2B-R1len.txt")
BR1<-read.table("2B-R1len.txt")
getwd()
setwd("myfiles/")
BR1<-read.table("2B-R1len.txt")
BR1<-read.table("myfiles/2B-R1-len.txt", sep="\t")
BR1<-read.table("myfiles/2B-R1-len.txt", sep=" ")
View(BR1)
BR1<-read.table("myfiles/2B-R1-len.txt")
View(BR1)
plot(log(BR1$V1)~BR1$V2)
BR2<-read.table("myfiles/2B-R2-len.txt")
{plot(log(BR1$V1)~BR1$V2)
points(log(BR2$V1~BR2$V2, add=T))}
{plot(log(BR1$V1)~BR1$V2)
points(log(BR2$V1~BR2$V2))}
points(log(BR2$V1)~BR2$V2, add=T)}
{plot(log(BR1$V1)~BR1$V2)
points(log(BR2$V1)~BR2$V2, add=T)}
{plot(log(BR1$V1)~BR1$V2)
points(log(BR2$V1)~BR2$V2)}
{plot(log(BR1$V1)~BR1$V2, pch=16, col="dodgerblue")
points(log(BR2$V1)~BR2$V2, pch=16, col="darkred")}
{plot(log(BR1$V1)~BR1$V2, pch=20, col="dodgerblue")
points(log(BR2$V1)~BR2$V2, pch=20, col="darkred")}
{plot(log(BR1$V1)~BR1$V2, pch=0, col="dodgerblue")
points(log(BR2$V1)~BR2$V2, pch=0, col="darkred")}
{plot(log(BR1$V1)~BR1$V2, pch=1, col="dodgerblue")
points(log(BR2$V1)~BR2$V2, pch=1, col="darkred")}
{plot(log(BR1$V1)~BR1$V2, pch=1, col="dodgerblue", xlab="Length of trimmed read", ylab="log(number of reads)")
points(log(BR2$V1)~BR2$V2, pch=1, col="darkred")}
{plot(log(BR1$V1, 10)~BR1$V2, pch=1, col="dodgerblue", xlab="Length of trimmed read", ylab="log(number of reads)")
points(log(BR2$V1)~BR2$V2, pch=1, col="darkred")}
{plot(log(BR1$V1, 10)~BR1$V2, pch=1, col="dodgerblue", xlab="Length of trimmed read", ylab="log(number of reads)")
points(log(BR2$V1, 10)~BR2$V2, pch=1, col="darkred")}
{plot(log(BR1$V1, 10)~BR1$V2, pch=|, col="dodgerblue", xlab="Length of trimmed read", ylab="log(number of reads)")
{plot(log(BR1$V1, 10)~BR1$V2, pch="|", col="dodgerblue", xlab="Length of trimmed read", ylab="log(number of reads)")
points(log(BR2$V1, 10)~BR2$V2, pch="|", col="darkred")}
{plot(log(BR1$V1, 10)~BR1$V2, pch="4", col="dodgerblue", xlab="Length of trimmed read", ylab="log(number of reads)")
points(log(BR2$V1, 10)~BR2$V2, pch="4", col="darkred")}
{plot(log(BR1$V1, 10)~BR1$V2, pch=4, col="dodgerblue", xlab="Length of trimmed read", ylab="log(number of reads)")
points(log(BR2$V1, 10)~BR2$V2, pch=4, col="darkred")}
{plot(log(BR1$V1, 10)~BR1$V2, pch=4, col="dodgerblue", xlab="Length of trimmed read", ylab="log(number of reads)", main = "Length Distribution of trimmed reads, 2B control)
points(log(BR2$V1, 10)~BR2$V2, pch=4, col="darkred")}
{plot(log(BR1$V1, 10)~BR1$V2, pch=4, col="dodgerblue", xlab="Length of trimmed read", ylab="log(number of reads)", main = "Length Distribution of trimmed reads, 2B control")
points(log(BR2$V1, 10)~BR2$V2, pch=4, col="darkred")}
?legend
{plot(log(BR1$V1, 10)~BR1$V2, pch=4, col="dodgerblue", xlab="Length of trimmed read", ylab="log(number of reads)", main = "Length distribution of trimmed reads, 2B control")
points(log(BR2$V1, 10)~BR2$V2, pch=4, col="darkred")
legend(0, 7)}
{plot(log(BR1$V1, 10)~BR1$V2, pch=4, col="dodgerblue", xlab="Length of trimmed read", ylab="log(number of reads)", main = "Length distribution of trimmed reads, 2B control")
points(log(BR2$V1, 10)~BR2$V2, pch=4, col="darkred")
legend(0, 7, legend = c("R1", "R2"), col=c("dodgerblue", "darkred", pch4))}
{plot(log(BR1$V1, 10)~BR1$V2, pch=4, col="dodgerblue", xlab="Length of trimmed read", ylab="log(number of reads)", main = "Length distribution of trimmed reads, 2B control")
points(log(BR2$V1, 10)~BR2$V2, pch=4, col="darkred")
legend(0, 7, legend = c("R1", "R2"), col=c("dodgerblue", "darkred", pch=4))}
{plot(log(BR1$V1, 10)~BR1$V2, pch=4, col="dodgerblue", xlab="Length of trimmed read", ylab="log(number of reads)", main = "Length distribution of trimmed reads, 2B control")
points(log(BR2$V1, 10)~BR2$V2, pch=4, col="darkred")
legend(0, 7, legend = c("R1", "R2"), col=c("dodgerblue", "darkred", lty=4))}
{plot(log(BR1$V1, 10)~BR1$V2, pch=4, col="dodgerblue", xlab="Length of trimmed read", ylab="log(number of reads)", main = "Length distribution of trimmed reads, 2B control")
points(log(BR2$V1, 10)~BR2$V2, pch=4, col="darkred")
legend(0, 7, legend = c("R1", "R2"), col=c("dodgerblue", "darkred"), pch=4)}
ER1<-read.table("myfiles/2E-R1-len.txt")
ER2<-read.table("myfiles/2E-R2-len.txt")
{plot(log(ER1$V1, 10)~ER1$V2, pch=4, col="dodgerblue", xlab="Length of trimmed read", ylab="log(number of reads)", main = "Length distribution of trimmed reads, 2E fox")
points(log(BR2$V1, 10)~BR2$V2, pch=4, col="darkred")
legend(0, 7, legend = c("R1", "R2"), col=c("dodgerblue", "darkred"), pch=4)}
{plot(log(ER1$V1, 10)~ER1$V2, pch=4, col="dodgerblue", xlab="Length of trimmed read", ylab="log10(number of reads)", main = "Length distribution of trimmed reads, 2E fox")
points(log(ER2$V1, 10)~ER2$V2, pch=3, col="darkred")
legend(0, 7, legend = c("R1", "R2"), col=c("dodgerblue", "darkred"), pch=4)}
{plot(log(ER1$V1, 10)~ER1$V2, pch=20, col="dodgerblue", xlab="Length of trimmed read", ylab="log10(number of reads)", main = "Length distribution of trimmed reads, 2E fox")
points(log(ER2$V1, 10)~ER2$V2, pch=2, col="darkred")
legend(0, 7, legend = c("R1", "R2"), col=c("dodgerblue", "darkred"), pch=4)}
{plot(log(ER1$V1, 10)~ER1$V2, pch=4, col="darkred", xlab="Length of trimmed read", ylab="log10(number of reads)", main = "Length distribution of trimmed reads, 2E fox")
points(log(ER2$V1, 10)~ER2$V2, pch=4, col="dodgerblue")
legend(0, 7, legend = c("R1", "R2"), col=c("darkred", "dodgerblue"), pch=4}
{plot(log(ER1$V1, 10)~ER1$V2, pch=4, col="darkred", xlab="Length of trimmed read", ylab="log10(number of reads)", main = "Length distribution of trimmed reads, 2E fox")
points(log(ER2$V1, 10)~ER2$V2, pch=4, col="dodgerblue")
legend(0, 7, legend = c("R1", "R2"), col=c("darkred", "dodgerblue"), pch=4)}
View(ER1)
sum(ER1$V1)
21113700/4
View(BR1)
View(ER2)
90/15
